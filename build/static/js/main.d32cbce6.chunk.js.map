{"version":3,"sources":["App.js","components/Navbar.js","components/Posts.js","components/Modal.js","components/Footer.js","components/Linkpost.js","Todos.js","AddTodo.js","components/Todo.js","serviceWorker.js","index.js"],"names":["App","className","exact","path","component","Todo","Posts","Linkpost","global","window","location","href","Component","Navbar","to","state","posts","axios","get","then","res","setState","data","slice","this","postList","length","map","post","key","id","title","body","Contact","M","Modal","init","inDuration","outDuration","opacity","dismissible","preventScrolling","startingTop","endingTop","getInstance","open","ref","Footer","props","match","params","post_id","Todos","todos","deleteToDo","todoList","todo","onClick","content","AddTodo","handleChange","e","target","value","handlSubmit","preventDefault","addTodo","onSubmit","type","onChange","Home","filter","Math","random","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d32cbce6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Todo from './components/Todo';\r\nimport Posts from './components/Posts';\r\nimport Modal from './components/Modal';\r\nimport Footer from './components/Footer'\r\nimport Linkpost from './components/Linkpost';\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Modal />\r\n\r\n\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Route exact path='/' component={Todo} />\r\n          <Route path='/posts' component={Posts} />\r\n\r\n          <Route path='/posts/:post_id' component={Linkpost} />\r\n          <Route\r\n            path=\"/Redirect\"\r\n            component={() => {\r\n              global.window && (global.window.location.href = 'http://moviereact.tk/');\r\n              return null;\r\n            }}\r\n          />\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className='nav-wrapper cyan darken-4'>\r\n            <div className='container'>\r\n                <NavLink to='/' className='brand-logo'>  <i className=\"large material-icons\">apps</i>\r\n                    Application\r\n                </NavLink>\r\n                <ul className='right'>\r\n                    <li><NavLink to='/'>Todo's</NavLink></li>\r\n                    <li><NavLink to='/Posts' >Posts</NavLink></li>\r\n                    <li><NavLink to='/Redirect' >MovieDB</NavLink></li>\r\n                    {/* <li><NavLink to='/Contact'>Contact</NavLink></li> */}\r\n                </ul>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Posts extends Component {\r\n\r\n\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/')\r\n            .then(res => {\r\n                this.setState({\r\n                    posts: res.data.slice(0, 20)\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        const { posts } = this.state;\r\n        const postList = posts.length ? (\r\n            posts.map(post => {\r\n                return (\r\n                    <div className='post card' key={post.id}>\r\n                        <div className='card-content'>\r\n                            <Link to={'/' + post.id}>\r\n                                <span className=\"card-title\">{post.title}</span>\r\n                            </Link>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n                <div className='center'>No posts yet..</div>\r\n            )\r\n        return (\r\n            <div className='container'>\r\n                <h4 className='center'>Posts</h4>\r\n                {postList}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Posts;","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\n\r\nclass Contact extends Component {\r\n    componentDidMount() {\r\n\r\n        const options = {\r\n            inDuration: 230,\r\n            outDuration: 430,\r\n            opacity: 0.88,\r\n            dismissible: false,\r\n            preventScrolling: true,\r\n            startingTop: \"44%\",\r\n            endingTop: \"22%\"\r\n        };\r\n        M.Modal.init(this.Modal, options);\r\n\r\n        let instance = M.Modal.getInstance(this.Modal);\r\n        instance.open();\r\n        // instance.close();\r\n        // instance.destroy();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container '>\r\n\r\n                <div\r\n                    ref={Modal => {\r\n                        this.Modal = Modal;\r\n                    }}\r\n                    id=\"modal1\"\r\n                    className=\"modal \"\r\n                >\r\n                    <div className=\"modal-content yellow accent-3\">\r\n                        <h4 className='center'>Application</h4>\r\n                        <p className='center'>Hi there :) There is a React application that contains 3 different applications that you will see after closing this popup. One of them is simple Todo list that you can manage as you wish. The second app is Posts and it just shows you a different kind of random post data fetched using post Api. The third app is Movie database that shows you some rating and some information about the movie you search.</p>\r\n                    </div>\r\n                    <div className=\"modal-footer white lighten-3\">\r\n\r\n                        <a className=\"modal-close waves-effect waves-red btn-flat \">\r\n                            Close\r\n            </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n\r\n        <footer className=\"page-footer cyan darken-4\">\r\n            <div className=\"container \">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col l4 offset-l2 s12 right\">\r\n                        <h5 className=\"white-text\">Contact</h5>\r\n                        <ul>\r\n                            <li><a className=\"grey-text text-lighten-3 hoverable\" href=\"#!\">Facebook</a></li>\r\n                            <li><a className=\"grey-text text-lighten-3 hoverable\" href=\"#!\">Github</a></li>\r\n                            <li><a className=\"grey-text text-lighten-3 hoverable\" href=\"#!\">Linkedin</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    © 2020 Made by Gadiyevich\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport class Linkpost extends Component {\r\n\r\n    state = {\r\n        post: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.post_id;\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\r\n            .then(res => {\r\n                this.setState({\r\n                    post: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const post = this.state.post ? (\r\n            <div>\r\n                <h4 className='center'>{this.state.post.title}</h4>\r\n                <p>{this.state.post.body}</p>\r\n            </div>\r\n        ) : (<div>Loading post...</div>)\r\n\r\n        return (\r\n            <div className='container'>\r\n                <h4>{post}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Linkpost","import React from 'react';\r\n\r\nconst Todos = ({ todos, deleteToDo }) => {\r\n\r\n    const todoList = todos.length ? (todos.map(todo => {\r\n        return (\r\n            <div className=\"collection-item\" key={todo.id}>\r\n                <span onClick={() => { deleteToDo(todo.id) }}>{todo.content}</span>\r\n            </div>\r\n        )\r\n    })) : (<p className=\"center\">You have no todos left</p>)\r\n\r\n    return (\r\n        <div className=\"todos collection\">{todoList}</div>\r\n    )\r\n}\r\n\r\nexport default Todos;","import React, { Component } from \"react\";\r\n\r\nclass AddTodo extends Component {\r\n\r\n\r\n    state = {\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n\r\n    handlSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n            content: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handlSubmit}>\r\n                <label>Add new todo: </label>\r\n                <input type=\"text\" onChange={this.handleChange} value={this.state.content}></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React, { Component } from 'react';\r\nimport Todos from '../Todos';\r\nimport AddTodo from '../AddTodo';\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        todos: [\r\n            { id: 1, content: 'make todo list' },\r\n            { id: 2, content: 'read a book' },\r\n            { id: 3, content: 'play football' },\r\n            { id: 4, content: 'learn React' }\r\n\r\n        ]\r\n    }\r\n\r\n    deleteToDo = (id) => {\r\n        const todos = this.state.todos.filter(todo => {\r\n            return todo.id !== id\r\n        })\r\n        this.setState({\r\n            todos: todos\r\n        })\r\n    }\r\n\r\n\r\n    addTodo = (todo) => {\r\n        todo.id = Math.random();\r\n        let todos = [...this.state.todos, todo]\r\n        this.setState({\r\n            todos\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h1 className=\"center red-text\">Todo's</h1>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center \">\r\n                        <div className=\"card-panel cyan darken-4\">\r\n                            <span className=\"white-text \">I am a simple Todo List. You can add, delete and manage your Todo's you see below!\r\n        </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"collection\">\r\n                    <a href=\"#\" className=\"collection-item\">  <p className=\"z-depth-4\"><Todos todos={this.state.todos} deleteToDo={this.deleteToDo} /></p></a>\r\n                </div>\r\n                <AddTodo addTodo={this.addTodo} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}